
# ‚úàÔ∏è LaaSy Corporate Travel ‚Äî Demo Stack

> Full-stack demo environment for the **LaaSy Corporate Travel Platform**, powered by **FastAPI + MySQL + JWT** on the backend and **React + Vite** on the frontend.

---

## üß© Overview

This repository lets you run the entire LaaSy platform locally using **Docker Compose** ‚Äî no manual setup required.

It includes:
- ‚úÖ **MySQL 8** preloaded with the `devcorptravel` schema, reference data, and demo tenant (`acme-001`)
- ‚öôÔ∏è **FastAPI backend** with JWT authentication and REST APIs
- üíª **React web client** with full login, booking, and trips flow
- üß± Configurable environment variables for easy customization

---

## üß± Architecture

```

laasy-demo-stack/
‚îú‚îÄ‚îÄ docker-compose.yml
‚îú‚îÄ‚îÄ mysql-init/            # MySQL schema + demo seed auto-applied on startup
‚îú‚îÄ‚îÄ backend/               # FastAPI + SQLAlchemy + JWT backend (from laasy-backend-mysql-jwt.zip)
‚îî‚îÄ‚îÄ web/                   # React web client (from laasy-webclient-auth.zip)

```

---

## ‚öôÔ∏è Prerequisites

- Docker Desktop (or Docker Engine + Compose plugin)
- Ports **3306**, **8000**, and **5173** available
- 4GB+ free RAM recommended

---

## üöÄ Quick Start

### 1Ô∏è‚É£ Prepare folders
Unzip the following archives into the stack directory:
```

laasy-demo-stack/
‚îú‚îÄ‚îÄ backend/   ‚Üê from laasy-backend-mysql-jwt.zip
‚îî‚îÄ‚îÄ web/       ‚Üê from laasy-webclient-auth.zip

````

### 2Ô∏è‚É£ Start the stack
```bash
cd laasy-demo-stack
docker compose up --build
````

Wait until you see:

```
‚úÖ MySQL init completed
‚úÖ FastAPI running on http://0.0.0.0:8000
‚úÖ Web available at http://localhost:5173
```

---

## üåê Access Points

| Service               | URL                                                      | Description                                  |
| --------------------- | -------------------------------------------------------- | -------------------------------------------- |
| **Frontend (React)**  | [http://localhost:5173](http://localhost:5173)           | Corporate travel booking portal              |
| **Backend (FastAPI)** | [http://localhost:8000/docs](http://localhost:8000/docs) | Swagger API documentation                    |
| **MySQL DB**          | `localhost:3306`                                         | Credentials: `root` / `root` (for demo only) |

---

## üë§ Demo Login Flow

1. **Register an account**

   ```
   Email: admin@acme.com
   Password: secret
   ```

   (Registration form is available on `/login`)

2. **Login**

   * Log in using your credentials
   * A JWT token is stored locally for API calls

3. **Explore**

   * Search for flights, hotels, or cars
   * Proceed to checkout
   * Confirm booking ‚Üí view it under ‚ÄúMy Trips‚Äù

---

## üßæ API Highlights

| Category     | Endpoint                                | Description                         |
| ------------ | --------------------------------------- | ----------------------------------- |
| **Auth**     | `/auth/register` / `/auth/token`        | Register or obtain JWT              |
| **Policies** | `/policies`                             | View or publish policies            |
| **Search**   | `/search/flights`                       | Mock offers policy-evaluated        |
| **Booking**  | `/booking`                              | Create a booking (records in MySQL) |
| **Trips**    | `/trips`                                | View booked trips                   |
| **Reports**  | `/reports/spend`, `/reports/compliance` | Org-level analytics                 |

---

## üß∞ Developer Tips

### Environment Variables

| Variable          | Default                                              | Description                    |
| ----------------- | ---------------------------------------------------- | ------------------------------ |
| `ORG_EXTERNAL_ID` | `acme-001`                                           | Tenant/org key used in headers |
| `JWT_SECRET`      | `change-me`                                          | Secret for JWT signing         |
| `DATABASE_URL`    | `mysql+pymysql://root:root@mysql:3306/devcorptravel` | DB connection string           |

---

## üîê Security Notes

* Passwords are hashed using bcrypt.
* JWT tokens expire after 2 hours (configurable in backend).
* Demo DB uses default credentials; **never use in production.**
* For real deployment, use AWS RDS or PlanetScale with unique secrets.

---

## üß† Troubleshooting

| Issue                           | Cause                 | Fix                                                        |
| ------------------------------- | --------------------- | ---------------------------------------------------------- |
| `Access denied for user 'root'` | MySQL not ready yet   | Wait 10‚Äì15 seconds, rerun `docker compose up`              |
| Web shows `CORS` error          | Backend not reachable | Ensure port 8000 open, restart containers                  |
| ‚ÄúInvalid credentials‚Äù on login  | Wrong org or user     | Use org `acme-001` or register new                         |
| Booking fails                   | Missing demo policy   | Confirm MySQL seed executed (see `mysql-init/00_init.sql`) |

---

## üßæ Example cURL Calls

### Login ‚Üí Get Token

```bash
curl -X POST http://localhost:8000/auth/token \
  -H 'X-Org-External-Id: acme-001' \
  -H 'Content-Type: application/x-www-form-urlencoded' \
  -d 'username=admin@acme.com&password=secret'
```

### Get Trips (authorized)

```bash
curl -H "Authorization: Bearer <your_token>" \
     -H "X-Org-External-Id: acme-001" \
     http://localhost:8000/trips
```

---

## üß± Tear Down

```bash
docker compose down -v
```

This removes containers, volumes, and the temporary database.

---

## üí° Next Steps

* Integrate **SSO (Okta / AzureAD)** for enterprise login
* Add **AI-powered policy recommendations**
* Deploy to **AWS ECS + RDS**
* Add **role-based dashboards** and **expense analytics**

---

## üñº Suggested Repo Structure

```
/docs/banner.png
/frontend/ (laasy-webclient-auth)
/backend/ (laasy-backend-mysql-jwt)
/devcorptravel_sql/ (schema & seeds)
.github/workflows/ (CI/CD pipelines)
docker-compose.yml
README.md
```

---

## üßæ License

¬© 2025 **LaaSy Inc.**
For internal demo and non-commercial evaluation use only.
